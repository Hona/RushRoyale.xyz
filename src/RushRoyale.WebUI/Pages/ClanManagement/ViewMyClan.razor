@page "/clan-management/my-clans/{GuildId:long}/{RoleId:long}"
@using Size = MudBlazor.Size
@attribute [Authorize]

@inject ClanClient ClanClient

@if (_loading)
{
    <MudProgressLinear Indeterminate />
}
else
{
    <MudText Typo="Typo.h4" Class="mb-4" Color="Color.Primary">
        @_clan?.DisplayName
    </MudText>
    
    <MudTable Items="_clan?.RoleUsers" Hover>
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<GuildUser, object>(x => x.DisplayName)"
                                   InitialDirection="SortDirection.Ascending">
                    Discord User
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                IGN
            </MudTh>
            <MudTh Style="width: 1%">
                Tools
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="User">
                <DiscordUser Value="context" Height="48" />
            </MudTd>
            <MudTd>
                
            </MudTd>
            <MudTd>
                <ClanUserTools Clan="_clan" User="context"/>
            </MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private Clan? _clan;
    
    private bool _loading;

    [Parameter]
    public long GuildId { get; set; }

    [Parameter]
    public long RoleId { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _loading = true;
        
        _clan = await ClanClient.GetClanAsync(GuildId, RoleId);

        _loading = false;
    }
}
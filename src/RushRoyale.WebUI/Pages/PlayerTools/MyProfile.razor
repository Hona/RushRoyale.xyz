@page "/player-tools/my-profile"
@using Size = MudBlazor.Size

@inject DataService DataService

@if (_units is null)
{
    <MudProgressLinear Indeterminate />
}
else
{
    @foreach (var playerUnit in _playerUnits)
    {
        <MudCard Class="d-flex align-center pa-4">
            <div class="px-4">
                <UnitCard Disabled="!playerUnit.Unlocked" Size="Shared.Size.Large" Value="_units.First(x => x.Id == playerUnit.UnitId)"/>
            </div>
            <MudSlider @bind-Value="playerUnit.UnitLevel" Class="px-6" T="int" Min="0" Max="15" Size="Size.Large" TickMarks ValueLabel>
                @if (playerUnit.Unlocked)
                {
                    <span>
                        Level: @playerUnit.UnitLevel
                    </span>
                }
                else
                {
                    <span>Not Unlocked!</span>
                }
            </MudSlider>
        </MudCard>
    }
    
    <MudButton Color="Color.Primary" Variant="Variant.Filled" Class="ma-2" Size="Size.Large">Save</MudButton>
}


@code {
    private IReadOnlyList<Unit>? _units;

    private IReadOnlyList<PlayerUnit> _playerUnits = null!;

    protected override async Task OnInitializedAsync()
    {
        _units = await DataService.GetUnitsAsync() ?? throw new InvalidOperationException();

        _playerUnits = _units.Select(x => new PlayerUnit()
        {
            UnitId = x.Id,
            UnitLevel = 0
        }).ToList();
    }

    private class PlayerUnit
    {
        public string UnitId { get; set; }
        public int UnitLevel { get; set; }
        public bool Unlocked => UnitLevel is not 0;
    }
}
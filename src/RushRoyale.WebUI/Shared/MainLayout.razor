@inherits LayoutComponentBase

@inject NavigationManager NavigationManager
@inject ToolsService ToolsService

@using Microsoft.AspNetCore.Components
@using System.Security.Claims
@implements IDisposable

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => NavMenuToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">
            <div @onclick='() => NavigationManager.NavigateTo("/")'>RushRoyale.xyz</div>
        </MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                Hello, <MudImage Src="@context.User.FindFirst("picture").Value" Class="ma-2" Style="outline:var(--mud-palette-appbar-text) 1px solid;max-height: 65%;width: auto;border-radius:50%"/> @context.User.Identity.Name!
            </Authorized>
            <NotAuthorized>
                <LoginButton />
            </NotAuthorized>
        </AuthorizeView>
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" OnClick="e => DrawerToggle()" />
    </MudAppBar>
    <MudDrawer @bind-Open="_navMenuOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
            <ErrorBoundary @ref="_errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <MudContainer MaxWidth="MaxWidth.Medium">
                        <MudAlert Severity="Severity.Error" Variant="Variant.Filled">
                            An unexpected error has occurred. Please try again later, or navigate to the <MudLink Typo="Typo.body2" Href="/" Color="Color.Inherit">dashboard</MudLink>
                        </MudAlert>
                        <MudPaper Class="mt-4 pa-8">
                            <MudText Typo="Typo.overline" Style="line-height: initial">
                                @context.ToString()
                            </MudText>
                        </MudPaper>
                    </MudContainer>
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>

<MudScrollToTop>
    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Filled.ArrowUpward" Color="Color.Tertiary">Go to top</MudButton>
</MudScrollToTop>

<DeveloperDrawer @bind-Open="_drawerOpen"/>

<MudThemeProvider IsDarkMode/>
<MudDialogProvider/>
<MudSnackbarProvider/>

@code {
    bool _navMenuOpen = true;

    private ErrorBoundary _errorBoundary = null!;

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += RecoverFromError;
    }


    void NavMenuToggle()
    {
        _navMenuOpen = !_navMenuOpen;
    }

    private void RecoverFromError(object? sender, LocationChangedEventArgs e)
    {
        _errorBoundary.Recover();
    }

    private bool _drawerOpen;
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    public void Dispose()
    {
        NavigationManager.LocationChanged -= RecoverFromError;
    }
}